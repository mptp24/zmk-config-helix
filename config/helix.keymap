/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
       keymap {
              compatible = "zmk,keymap";
 
              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |  ESC   |   1    |   2    |   3    |   4    |   5    |                                    |   6    |   7    |   8    |   9    |   0    |  BSPC  |
 // |  ESC   |   Q    |   W    |   E    |   R    |   T    |                                    |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
 // |  TAB   |   A    |   S    |   D    |   F    |   G    |                                    |   H    |   J    |   K    |   L    |   ;    |   '    |
 // |  SHIFT |   Z    |   X    |   C    |   V    |   B    | reset  |                  |  reset |   N    |   M    |   ,    |   .    |   /    |  SHIFT |
 // | LCTRL  |  LGUI  |  LALT  |  SPACE | LOWER  | SPACE  | SPACE  |                  |  SPACE | SPACE  | RAISE  |  LANG1 |CAPSLOCK| NONE   |  ENTER |
                     bindings = <
    &kp ESC   &kp N1   &kp N2   &kp N3    &kp N4    &kp N5                                 &kp N6    &kp N7    &kp N8     &kp N9      &kp N0    &kp BSPC
    &kp ESC   &kp Q    &kp W    &kp E     &kp R     &kp T                                  &kp Y     &kp U     &kp I      &kp O       &kp P     &kp BSPC
    &kp TAB   &kp A    &kp S    &kp D     &kp F     &kp G                                  &kp H     &kp J     &kp K      &kp L       &kp SEMI  &kp SQT
    &kp LSHFT &kp Z    &kp X    &kp C     &kp V     &kp B     &reset             &reset    &kp N     &kp M     &kp COMMA  &kp PERIOD  &kp SLASH &kp RSHIFT
    &kp LCTRL &kp LGUI &kp LALT &kp SPACE &mo LOWER &kp SPACE &kp SPACE          &kp SPACE &kp SPACE &mo RAISE &kp LANG1  &kp CAPS    &kp NONE  &kp ENTER
                     >;
              };
              lower_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // | `     |  !     |  @    |  #     |  $      |  %     |                           |  ^     |   &    |   *    |   (    |   )    |  BSPC |
 // | `     |  1     |  2    |  3     |  4      |  5     |                           |  6     |   7    |   8    |   9    |   0    |  BSPC |
 // |       |        |       |  (     |  )      |  =     |                           |  +     |   4    |   5    |   6    |   *    |   =   |
 // |       |        |       |  [     |  ]      |  _     |       |            |      |  -     |   1    |   2    |   3    |   /    |       |
 // |       |        |       |        |         |        |       |            |      |        |   0    |   ,    |   .    |   .    |       |
                     bindings = <
    &kp GRAVE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                           &kp CARET &kp AMPS  &kp ASTRK &kp LPAR   &kp RPAR   &kp BSPC
    &kp GRAVE &kp N1   &kp N2 &kp N3   &kp N4   &kp N5                              &kp N6    &kp N7    &kp N8    &kp N9     &kp N0     &kp BSPC
    &trans    &trans   &trans &kp LPAR &kp RPAR &kp EQUAL                           &kp PLUS  &kp N4    &kp N5    &kp N6     &kp ASTRK  &kp EQUAL
    &trans    &trans   &trans &kp LBKT &kp RBKT &kp UNDER &trans            &trans  &kp MINUS &kp N1    &kp N2    &kp N3     &kp SLASH  &trans
    &trans    &trans   &trans &trans   &trans   &trans    &trans            &trans  &trans    &kp N0    &kp COMMA &kp PERIOD &kp PERIOD &trans
                     >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |       |       |       |       |       |       |                                 |       |       |       |       |       |       |
 // |       |       |       |       |       |       |                                 |       | LC(L) |   UP  | LC(R) |  DEL  | BSPC  |
 // |       |       |       |       |       |       |                                 |  HOME | LEFT  |  DOWN | RIGHT |  END  |       |
 // |       |       |       |       |       |       |       |                 |       |       |       |       |       |       |       |
 // |       |       |       |       |       |       |       |                 |       |       |       |       |       |       |       |
                     bindings = <
    &trans    &trans &trans &trans &trans  &trans                                      &trans   &trans   &trans    &trans    &trans   &trans
    &trans    &trans &trans &trans &trans  &trans                                      &trans   &kp LC(LEFT)  &kp UP  &kp LC(RIGHT)  &kp DEL  &kp BSPC
    &trans    &trans &trans &trans &trans  &trans                                      &kp HOME &kp LEFT &kp DOWN  &kp RIGHT &kp END &trans
    &trans    &trans &trans &trans &trans  &trans  &trans                      &trans  &trans   &trans   &trans    &trans    &trans   &trans
    &trans    &trans &trans &trans &trans  &trans  &trans                      &trans  &trans   &trans   &trans    &trans    &trans   &trans
                     >;
              };
              adjust_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |    `     |    !     |    @     |    #     |    $     |    %     |                                        |            |       |       |       |       |       |
 // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                        |            |       |       |       |       |       |
 // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                        |   VOL_UP   |       |       |       |       |       |
 // |  BT PRV  |          |          |          |          |          |          |                  |          |   VOL_DN   |       |       |       |       |       |
 // |          |          |          |          |          |          |          |                  |          |            |       |       |       |       |       |
                     bindings = <
       &trans     &trans       &trans       &trans       &trans       &trans                                &trans        &trans  &trans   &trans  &trans  &trans
       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                          &trans        &trans  &trans   &trans  &trans  &trans
       &bt BT_NXT &out OUT_TOG &out OUT_USB &out OUT_BLE &trans       &trans                                &kp C_VOL_UP  &trans  &trans   &trans  &trans  &trans
       &bt BT_PRV &trans       &trans       &trans       &trans       &trans       &trans          &trans   &kp C_VOL_DN  &trans  &trans   &trans  &trans  &trans
       &trans     &trans       &trans       &trans       &trans       &trans       &trans          &trans   &trans        &trans  &trans   &trans  &trans  &trans
                     >;
              };
       };
};
